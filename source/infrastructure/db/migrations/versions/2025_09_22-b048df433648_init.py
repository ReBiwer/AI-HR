"""init

Revision ID: b048df433648
Revises: 
Create Date: 2025-09-22 11:08:21.959674

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b048df433648'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employers',
    sa.Column('hh_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employers_hh_id'), 'employers', ['hh_id'], unique=True)
    op.create_index(op.f('ix_employers_id'), 'employers', ['id'], unique=False)
    op.create_table('users',
    sa.Column('hh_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mid_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('telegram_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_hh_id'), 'users', ['hh_id'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('resumes',
    sa.Column('hh_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('contact_phone', sa.String(), nullable=True),
    sa.Column('contact_email', sa.String(), nullable=True),
    sa.Column('skills', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resumes_hh_id'), 'resumes', ['hh_id'], unique=True)
    op.create_index(op.f('ix_resumes_id'), 'resumes', ['id'], unique=False)
    op.create_index(op.f('ix_resumes_user_id'), 'resumes', ['user_id'], unique=False)
    op.create_table('vacancies',
    sa.Column('hh_id', sa.String(), nullable=False),
    sa.Column('url_vacancy', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('experience', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('key_skills', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('employer_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['employer_id'], ['employers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vacancies_hh_id'), 'vacancies', ['hh_id'], unique=True)
    op.create_index(op.f('ix_vacancies_id'), 'vacancies', ['id'], unique=False)
    op.create_table('job_experiences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resume_id', sa.Integer(), nullable=False),
    sa.Column('company', sa.String(), nullable=False),
    sa.Column('position', sa.String(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_experiences_id'), 'job_experiences', ['id'], unique=False)
    op.create_index(op.f('ix_job_experiences_resume_id'), 'job_experiences', ['resume_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_job_experiences_resume_id'), table_name='job_experiences')
    op.drop_index(op.f('ix_job_experiences_id'), table_name='job_experiences')
    op.drop_table('job_experiences')
    op.drop_index(op.f('ix_vacancies_id'), table_name='vacancies')
    op.drop_index(op.f('ix_vacancies_hh_id'), table_name='vacancies')
    op.drop_table('vacancies')
    op.drop_index(op.f('ix_resumes_user_id'), table_name='resumes')
    op.drop_index(op.f('ix_resumes_id'), table_name='resumes')
    op.drop_index(op.f('ix_resumes_hh_id'), table_name='resumes')
    op.drop_table('resumes')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_hh_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_employers_id'), table_name='employers')
    op.drop_index(op.f('ix_employers_hh_id'), table_name='employers')
    op.drop_table('employers')
    # ### end Alembic commands ###
